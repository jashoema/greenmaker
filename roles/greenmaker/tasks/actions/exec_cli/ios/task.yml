---
- debug:
    msg: "Executing {{ (action.keys() | list)[0] }} for {{ ansible_network_os }}"
    verbosity: 1

- name: Execute commands for IOS device
  block:

  - name: Execute commands for IOS device
    ios_command: 
      commands: "{{ action['exec_cli']['args']['commands'] }}"
    vars:
      ansible_command_timeout: "{{ action['exec_cli']['args']['timeout'] | default(60) | int }}"
    register: cli_exec_data_raw

  - name: Append cli logs to same file
    lineinfile:
      dest: "{{ gm_log_path }}/{{ gm_log_cli_name }}"
      line: | 
          >> {{ action['exec_cli']['args']['commands'][index] }}
          {{ current_std_output }}
      insertafter: EOF
    check_mode: no
    loop: "{{ cli_exec_data_raw['stdout'] }}"
    loop_control:
        loop_var: current_std_output
        index_var: index
    delegate_to: localhost
    
  when: test_mode == false or (test_mode == true and test_type == 'remediation')
  
- name: When in Validation Test Mode, generate debug output and log non-execution of commands to file
  block:

  - name: Validation Test Mode debug output
    debug:
      msg: |
        The following commands were not executed due to use of Validation Test Mode:
        {{ action['exec_cli']['args']['commands'] }}
      verbosity: 1

  - name: Append cli logs to same file
    lineinfile:
      dest: "{{ gm_log_path }}/{{ gm_log_cli_name }}"
      line: | 
          >> {{ command }}
          Execution skipped due to Validation Test Mode
      insertafter: EOF
    check_mode: no
    loop: "{{ action['exec_cli']['args']['commands'] }}"
    loop_control:
        loop_var: command
        index_var: index
    delegate_to: localhost

  when: test_mode == true and test_type == 'validation'
